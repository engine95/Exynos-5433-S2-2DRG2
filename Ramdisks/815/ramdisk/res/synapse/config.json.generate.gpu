#!/sbin/busybox sh

cat << CTAG
{
    name:GPU,
    elements:[
	{ SPane:{
                title:"GPU power policy control",
                description:" COARSE DEMAND power policy is to control only external power (PMU for G3D). It is better at saving power and performance. COARSE DEMAND turns off GPU power in case of being no job for 100ms and turns it on in case of incomming first job on the state of GPU off. Default is coarse_demand."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SDescription:{
		description:" DEMAND power policy controls internal core power when processing a job, so it can be controlled frequently rendering one frame. This frequent control affect job utilization. So power consumption on DVFS with demand power policy is higher than coarse_demand."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
                title:"Mali power policy control",
                default:`echo $(/res/synapse/actions/bracket-option /sys/devices/14ac0000.mali/power_policy)`,
                action:"bracket-option /sys/devices/14ac0000.mali/power_policy",
                values:[
`
                        for POLICY in \`cat /sys/devices/14ac0000.mali/power_policy | sed -e 's/\]//;s/\[//'\`; do
                          echo "\"$POLICY\","
                        done
`
		]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
                title:"GPU scaling settings",
                description:" You may change these values, but be aware that SAMSUNG DVFS may overide them."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"GPU MAX freq",
                description:" Set the maximum frequency the GPU scales up to. Default is 600.\n",
                unit:" MHz",
                default:`cat /sys/devices/14ac0000.mali/max_clock`,
                action:"generic /sys/devices/14ac0000.mali/max_clock",
                values:{
`
                        while read FREQ VOLT; do
                                        LABEL=$(expr $FREQ)
                                echo "$FREQ:\"${LABEL} MHz\", "
                        done < /sys/devices/14ac0000.mali/volt_table
`
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"GPU MIN freq",
                description:" Set the minimum frequency the GPU scales up to. Default is 160.\n",
                unit:" MHz",
                default:`cat /sys/devices/14ac0000.mali/min_clock`,
                action:"generic /sys/devices/14ac0000.mali/min_clock",
                values:[160, 266, 350, 420,]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"GPU voltage control",
		description:" Decreasing voltage will lower power consumption of the GPU. Increasing it on overclocked frequencies improves stability. Too low voltage may cause instabilities and freezes." 
	}},
`
while read FREQ VOLT; do
        echo '{ SSeekBar:{'
                echo 'title:"'$FREQ' MHz", default:'$VOLT', '
                echo 'action:"gpuvolt '${FREQ}'", unit:" mV", weight:0.001, min:700000, max:1187500, step:6250 }}, '
done < /sys/devices/14ac0000.mali/volt_table
`
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
                title:"GPU Interactive governor tunables"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"GPU highspeed clock",
                description:" Boost the minimum frequency the GPU scales up to.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_clock`,
                unit:" MHz",
                action:"generic /sys/devices/14ac0000.mali/highspeed_clock",
                values:{
`
                        while read FREQ VOLT; do
                                        LABEL=$(expr $FREQ)
                                echo "$FREQ:\"${LABEL} MHz\", "
                        done < /sys/devices/14ac0000.mali/volt_table
`
                }
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"GPU highspeed load",
                description:" Jump the minimum frequency level to highspeed_clock when the GPU utilization over this value.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_load`,
				max:100, min:1, unit:" %", step:1,
                action:"generic /sys/devices/14ac0000.mali/highspeed_load",
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"GPU highspeed delay",
                description:" Jump the minimum frequency level to highspeed_clock when the GPU utilization over highspeed_load and over this delayed value.\n",
                default:`cat /sys/devices/14ac0000.mali/highspeed_delay`,
                max:100, min:0, unit:" ms", step:1,
                action:"generic /sys/devices/14ac0000.mali/highspeed_delay",
	}},
	{ SSpacer:{
		height:1
	}},
    ]
}
CTAG
